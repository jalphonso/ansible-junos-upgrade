---
- name: Install/Upgrade Junos
  hosts: all
  serial: 1
  roles:
    - Juniper.junos
  connection: local
  gather_facts: no
  vars:
    wait_time: 3600
    netconf_port: 830
    local_pkg_dir: ../Downloads/
    remote_pkg_dir: /tmp/
    qfx5100_OS_version: 14.1X53-D46.7
    qfx5100_OS_package: jinstall-qfx-5-14.1X53-D46.7-domestic-signed.tgz
    qfx5100_OS_md5: 743e4c731bf38e07c45f021e89d73652
    qfx5200_OS_version: 15.1X53-D233.1
    qfx5200_OS_package: jinstall-host-qfx-5e-15.1X53-D233.1-secure-domestic-signed.tgz
    qfx5200_OS_md5: 1ce5c3be823e116b82f28988fea96e60
    qfx10002_OS_version: 15.1X53-D65.3
    qfx10002_OS_package: jinstall-host-qfx-10-f-15.1X53-D65.3-domestic-signed.tgz
    qfx10002_OS_md5: 7b43e76f8bde2e11f54b1fbe798110e7
    log_dir: ./

  tasks:
    - name: Junos get facts for device
      juniper_junos_facts:
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
      register: facts

    - name: Set OS package for device type
      set_fact:
       OS_version: "{%- if facts['ansible_facts']['junos']['model']|search('QFX5100')-%}
                         {{ qfx5100_OS_version }}
                    {%- elif facts['ansible_facts']['junos']['model']|search('QFX5200')-%}
                         {{ qfx5200_OS_version }}
                    {%- elif facts['ansible_facts']['junos']['model']|search('QFX10002')-%}
                         {{ qfx10002_OS_version }}
                    {% endif %}" 
       OS_package: "{%- if facts['ansible_facts']['junos']['model']|search('QFX5100')-%}
                         {{ qfx5100_OS_package }}
                    {%- elif facts['ansible_facts']['junos']['model']|search('QFX5200')-%}
                         {{ qfx5200_OS_package }}
                    {%- elif facts['ansible_facts']['junos']['model']|search('QFX10002')-%}
                         {{ qfx10002_OS_package }}
                    {%- endif -%}" 
       OS_md5:     "{%- if facts['ansible_facts']['junos']['model']|search('QFX5100')-%}
                         {{ qfx5100_OS_md5 }}
                    {%- elif facts['ansible_facts']['junos']['model']|search('QFX5200')-%}
                         {{ qfx5200_OS_md5 }}
                    {%- elif facts['ansible_facts']['junos']['model']|search('QFX10002')-%}
                         {{ qfx10002_OS_md5 }}
                    {%- endif -%}" 

    - name: Checking NETCONF connectivity
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ netconf_port }}"
        timeout: 5

    - name: Software to be installed
      debug:
        msg: "Installing Junos software version {{ OS_version }} to device {{ inventory_hostname }}"

    - name: Install Junos OS package
      juniper_junos_software:
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        reboot: yes
        reboot_pause: 65
        validate: no
        version: "{{ OS_version }}"
        local_package: "{{ local_pkg_dir }}/{{ OS_package }}"
        remote_package: "{{ remote_pkg_dir }}/{{ OS_package }}"
        checksum: "{{ OS_md5 }}"
        logdir: "{{ log_dir }}"
      register: sw
      notify:
        - update_user
        - wait_reboot
    - debug:
        var: sw

  handlers:
    - name: update_user
      debug:
        msg: "Junos software version {{ OS_version }} upgrade for device {{ inventory_hostname }} is now complete. Rebooted and waiting for device to come back online..."

    - name: wait_reboot
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ netconf_port }}"
        timeout: "{{ wait_time }}"
      when: not sw.check_mode
